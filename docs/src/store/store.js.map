{"version":3,"sources":["../../../src/store/store.js"],"names":["use","debug","process","env","NODE_ENV","actions","GET_ALL_GAMES","commit","league","get","then","response","games","data","err","GET_ALL_PLAYERS","players","ADD_A_GAME","whiteId","blackId","result","method","url","encodeURIComponent","config","headers","Accept","GET_ALL_LEAGUES","leagues","mutations","SET_GAMES","state","SET_PLAYERS","SET_LEAGUES","GET_FAILED","error","POST_FAILED","POST_SUCCESS","success","successInfo","getters","loading","selectedWhitePlayer","name","selectedBlackPlayer","selectedLeague","Store","strict"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,cAAIA,GAAJ;;AAEA,IAAMC,QAAQC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;;AAEA,IAAMC,UAAU;AACdC,eADc,sCACwB;AAAA,QAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,QAAVC,MAAU,SAAVA,MAAU;;AACpC,oBAAMC,GAAN,sCAA6CD,MAA7C,aAA6DE,IAA7D,CAAkE,UAACC,QAAD,EAAc;AAC9EJ,aAAO,WAAP,EAAoB,EAAEK,OAAOD,SAASE,IAAlB,EAApB;AACD,KAFD,EAEG,UAACC,GAAD,EAAS;AACVP,aAAO,YAAP,EAAqBO,GAArB;AACD,KAJD;AAKD,GAPa;AAQdC,iBARc,yCAQ0B;AAAA,QAAtBR,MAAsB,SAAtBA,MAAsB;AAAA,QAAVC,MAAU,SAAVA,MAAU;;AACtC,oBAAMC,GAAN,sCAA6CD,MAA7C,eAA+DE,IAA/D,CAAoE,UAACC,QAAD,EAAc;AAChFJ,aAAO,aAAP,EAAsB,EAAES,SAASL,SAASE,IAApB,EAAtB;AACD,KAFD,EAEG,UAACC,GAAD,EAAS;AACVP,aAAO,YAAP,EAAqBO,GAArB;AACD,KAJD;AAKD,GAda;AAedG,YAfc,oCAiBX;AAAA,QAFUV,MAEV,SAFUA,MAEV;AAAA,QADDC,MACC,SADDA,MACC;AAAA,QADOU,OACP,SADOA,OACP;AAAA,QADgBC,OAChB,SADgBA,OAChB;AAAA,QADyBC,MACzB,SADyBA,MACzB;;AACD,yBAAM;AACJC,cAAQ,MADJ;AAEJC,gDAAwCd,MAAxC,WAFI;AAGJK,yBAAiBU,mBAAmBL,OAAnB,CAAjB,iBAAwDK,mBAAmBJ,OAAnB,CAAxD,gBAA8FI,mBAAmBH,MAAnB,CAH1F;AAIJI,cAAQ;AACNC,iBAAS;AACPC,kBAAQ,kBADD;AAEP,0BAAgB;AAFT;AADH;AAJJ,KAAN,EAUGhB,IAVH,CAUQ,UAACC,QAAD,EAAc;AACpBJ,aAAO,cAAP,EAAuBI,QAAvB;AACD,KAZD,EAYG,UAACG,GAAD,EAAS;AACVP,aAAO,aAAP,EAAsBO,GAAtB;AACD,KAdD;AAeD,GAjCa;AAkCda,iBAlCc,kCAkCc;AAAA,QAAVpB,MAAU,SAAVA,MAAU;;AAC1B,oBAAME,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA0D,UAACC,QAAD,EAAc;AACtEJ,aAAO,WAAP,EAAoB,EAAEqB,SAASjB,SAASE,IAApB,EAApB;AACD,KAFD,EAEG,UAACC,GAAD,EAAS;AACVP,aAAO,YAAP,EAAqBO,GAArB;AACD,KAJD;AAKD;AAxCa,CAAhB;;AA2CA,IAAMe,YAAY;AAChBC,aAAW,mBAACC,KAAD,SAAsB;AAAA,QAAZnB,KAAY,SAAZA,KAAY;;AAC/BmB,UAAMnB,KAAN,GAAcA,KAAd;AACD,GAHe;AAIhBoB,eAAa,qBAACD,KAAD,SAAwB;AAAA,QAAdf,OAAc,SAAdA,OAAc;;AACnCe,UAAMf,OAAN,GAAgBA,OAAhB;AACD,GANe;AAOhBiB,eAAa,qBAACF,KAAD,UAAwB;AAAA,QAAdH,OAAc,UAAdA,OAAc;;AACnCG,UAAMH,OAAN,GAAgBA,OAAhB;AACD,GATe;AAUhBM,cAAY,oBAACH,KAAD,UAAsB;AAAA,QAAZI,KAAY,UAAZA,KAAY;;AAChCJ,UAAMI,KAAN,GAAcA,KAAd;AACD,GAZe;AAahBC,eAAa,qBAACL,KAAD,UAAsB;AAAA,QAAZI,KAAY,UAAZA,KAAY;;AACjCJ,UAAMI,KAAN,GAAcA,KAAd;AACD,GAfe;AAgBhBE,gBAAc,sBAACN,KAAD,UAAyB;AAAA,QAAfpB,QAAe,UAAfA,QAAe;;AACrCoB,UAAMO,OAAN,GAAgB,IAAhB;AACAP,UAAMQ,WAAN,GAAoB5B,QAApB;AACD;AAnBe,CAAlB;;AAsBA,IAAM6B,UAAU,EAAhB;;AAIA,IAAMT,QAAQ;AACZQ,eAAa,EADD;AAEZD,WAAS,KAFG;AAGZG,WAAS,KAHG;AAIZN,SAAO,KAJK;AAKZO,uBAAqB,EAAEC,MAAM,YAAR,EALT;AAMZC,uBAAqB,EAAED,MAAM,YAAR,EANT;AAOZ/B,SAAO,EAPK;AAQZgB,WAAS,EARG;AASZZ,WAAS,EATG;AAUZ6B,kBAAgB;AAVJ,CAAd;;kBAae,IAAI,eAAKC,KAAT,CAAe;AAC5Bf,cAD4B;AAE5B9B,cAF4B;AAG5BI,kBAH4B;AAI5BwB,sBAJ4B;AAK5BW,kBAL4B;AAM5BO,UAAQ;AANoB,CAAf,C","file":"store.js","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== 'production';\n\nconst actions = {\n  GET_ALL_GAMES({ commit }, { league }) {\n    axios.get(`https://clj-glicko.desperate.no/${league}/games`).then((response) => {\n      commit('SET_GAMES', { games: response.data });\n    }, (err) => {\n      commit('GET_FAILED', err);\n    });\n  },\n  GET_ALL_PLAYERS({ commit }, { league }) {\n    axios.get(`https://clj-glicko.desperate.no/${league}/players`).then((response) => {\n      commit('SET_PLAYERS', { players: response.data });\n    }, (err) => {\n      commit('GET_FAILED', err);\n    });\n  },\n  ADD_A_GAME({ commit }, {\n    league, whiteId, blackId, result,\n  }) {\n    axios({\n      method: 'post',\n      url: `https://clj-glicko.desperate.no/${league}/games`,\n      data: `whiteId=${encodeURIComponent(whiteId)}&blackId=${encodeURIComponent(blackId)}&result=${encodeURIComponent(result)}`,\n      config: {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    }).then((response) => {\n      commit('POST_SUCCESS', response);\n    }, (err) => {\n      commit('POST_FAILED', err);\n    });\n  },\n  GET_ALL_LEAGUES({ commit }) {\n    axios.get('https://clj-glicko.desperate.no/leagues').then((response) => {\n      commit('SET_GAMES', { leagues: response.data });\n    }, (err) => {\n      commit('GET_FAILED', err);\n    });\n  },\n};\n\nconst mutations = {\n  SET_GAMES: (state, { games }) => {\n    state.games = games;\n  },\n  SET_PLAYERS: (state, { players }) => {\n    state.players = players;\n  },\n  SET_LEAGUES: (state, { leagues }) => {\n    state.leagues = leagues;\n  },\n  GET_FAILED: (state, { error }) => {\n    state.error = error;\n  },\n  POST_FAILED: (state, { error }) => {\n    state.error = error;\n  },\n  POST_SUCCESS: (state, { response }) => {\n    state.success = true;\n    state.successInfo = response;\n  },\n};\n\nconst getters = {\n\n};\n\nconst state = {\n  successInfo: {},\n  success: false,\n  loading: false,\n  error: false,\n  selectedWhitePlayer: { name: 'Player One' },\n  selectedBlackPlayer: { name: 'Player Two' },\n  games: [],\n  leagues: [],\n  players: [],\n  selectedLeague: {},\n};\n\nexport default new Vuex.Store({\n  state,\n  debug,\n  actions,\n  mutations,\n  getters,\n  strict: true,\n});\n"]}